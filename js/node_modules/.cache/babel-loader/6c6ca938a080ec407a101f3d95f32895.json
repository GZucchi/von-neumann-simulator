{"ast":null,"code":"var _jsxFileName = \"/home/bernardo/Projects/von-neumann-simulator/src/components/Memory.js\";\nimport React, { useState } from 'react';\n\nconst MemoryField = ({\n  address,\n  value,\n  state\n}) => {\n  const handleChange = event => {\n    let MEMcopy = [...state.MEM];\n    MEMcopy[address] = Number(event.target.value);\n    state.setMEM(MEMcopy);\n    console.log(MEMcopy);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, address.toString(16).toUpperCase()), /*#__PURE__*/React.createElement(\"input\", {\n    value: value,\n    onChange: handleChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 58\n    }\n  }));\n};\n\nconst Memory = () => {\n  const memoryStyle = {\n    flex: 1,\n    textAlign: 'right',\n    padding: '0 1em'\n  };\n  const [MEM, setMEM] = useState(Array(4096).fill(0));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: memoryStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, MEM.map((value, address) => /*#__PURE__*/React.createElement(MemoryField, {\n    key: address,\n    address: address,\n    value: value,\n    state: {\n      MEM,\n      setMEM\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 39\n    }\n  }))));\n};\n\nexport default Memory;","map":{"version":3,"sources":["/home/bernardo/Projects/von-neumann-simulator/src/components/Memory.js"],"names":["React","useState","MemoryField","address","value","state","handleChange","event","MEMcopy","MEM","Number","target","setMEM","console","log","toString","toUpperCase","Memory","memoryStyle","flex","textAlign","padding","Array","fill","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AACjD,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAIC,OAAO,GAAG,CAAE,GAAGH,KAAK,CAACI,GAAX,CAAd;AACAD,IAAAA,OAAO,CAACL,OAAD,CAAP,GAAmBO,MAAM,CAACH,KAAK,CAACI,MAAN,CAAaP,KAAd,CAAzB;AACAC,IAAAA,KAAK,CAACO,MAAN,CAAaJ,OAAb;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,OAAO,CAACY,QAAR,CAAiB,EAAjB,EAAqBC,WAArB,EAAR,CADF,eACqD;AAAO,IAAA,KAAK,EAAEZ,KAAd;AAAqB,IAAA,QAAQ,EAAEE,YAA/B;AAA6C,IAAA,IAAI,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrD,CADF;AAKD,CAbD;;AAeA,MAAMW,MAAM,GAAG,MAAM;AACnB,QAAMC,WAAW,GAAG;AAClBC,IAAAA,IAAI,EAAE,CADY;AAElBC,IAAAA,SAAS,EAAE,OAFO;AAGlBC,IAAAA,OAAO,EAAE;AAHS,GAApB;AAMA,QAAM,CAAEZ,GAAF,EAAOG,MAAP,IAAkBX,QAAQ,CAACqB,KAAK,CAAC,IAAD,CAAL,CAAYC,IAAZ,CAAiB,CAAjB,CAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,KAAK,EAAEL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIT,GAAG,CAACe,GAAJ,CAAQ,CAACpB,KAAD,EAAQD,OAAR,kBAAoB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAlB;AAA2B,IAAA,OAAO,EAAEA,OAApC;AAA6C,IAAA,KAAK,EAAEC,KAApD;AAA2D,IAAA,KAAK,EAAE;AAAEK,MAAAA,GAAF;AAAOG,MAAAA;AAAP,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,CADJ,CADF,CADF;AAOD,CAhBD;;AAkBA,eAAeK,MAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst MemoryField = ({ address, value, state }) => {\n  const handleChange = event => {\n    let MEMcopy = [ ...state.MEM ]\n    MEMcopy[address] = Number(event.target.value)\n    state.setMEM(MEMcopy)\n    console.log(MEMcopy)\n  }\n\n  return(\n    <div>\n      <label>{address.toString(16).toUpperCase()}</label><input value={value} onChange={handleChange} type=\"text\"/>\n    </div>\n  )\n}\n\nconst Memory = () => {\n  const memoryStyle = {\n    flex: 1, \n    textAlign: 'right',\n    padding: '0 1em',\n  }\n\n  const [ MEM, setMEM ] = useState(Array(4096).fill(0))\n\n  return(\n    <div style={memoryStyle}>\n      <form>\n        { MEM.map((value, address) => <MemoryField key={address} address={address} value={value} state={{ MEM, setMEM }}/>) }\n      </form>\n    </div>\n  )\n}\n\nexport default Memory\n"]},"metadata":{},"sourceType":"module"}