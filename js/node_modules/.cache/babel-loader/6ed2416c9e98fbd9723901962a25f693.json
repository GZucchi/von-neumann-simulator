{"ast":null,"code":"var _jsxFileName = \"/home/bernardo/Projects/von-neumann-simulator/src/components/Memory.js\";\nimport React, { useState } from 'react';\n\nconst MemoryField = ({\n  label,\n  value,\n  setMEM\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, label.toString(16).toUpperCase()), /*#__PURE__*/React.createElement(\"input\", {\n    value: value,\n    onChange: event => setMEM(event.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 56\n    }\n  }));\n};\n\nconst Memory = () => {\n  const memoryStyle = {\n    flex: 1,\n    textAlign: 'right',\n    padding: '0 1em'\n  };\n  const [MEM, setMEM] = useState(Array(4096).fill(0));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: memoryStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MemoryField, {\n    label: \"CI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MemoryField, {\n    label: \"AC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), MEM.map((value, address) => /*#__PURE__*/React.createElement(MemoryField, {\n    key: address,\n    label: address,\n    value: value,\n    setMEM: setMEM,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 39\n    }\n  }))));\n};\n\nexport default Memory;","map":{"version":3,"sources":["/home/bernardo/Projects/von-neumann-simulator/src/components/Memory.js"],"names":["React","useState","MemoryField","label","value","setMEM","toString","toUpperCase","event","target","Memory","memoryStyle","flex","textAlign","padding","MEM","Array","fill","map","address"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAA8B;AAChD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,KAAK,CAACG,QAAN,CAAe,EAAf,EAAmBC,WAAnB,EAAR,CADF,eACmD;AAAO,IAAA,KAAK,EAAEH,KAAd;AAAqB,IAAA,QAAQ,EAAEI,KAAK,IAAIH,MAAM,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd,CAA9C;AAAoE,IAAA,IAAI,EAAC,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnD,CADF;AAKD,CAND;;AAQA,MAAMM,MAAM,GAAG,MAAM;AACnB,QAAMC,WAAW,GAAG;AAClBC,IAAAA,IAAI,EAAE,CADY;AAElBC,IAAAA,SAAS,EAAE,OAFO;AAGlBC,IAAAA,OAAO,EAAE;AAHS,GAApB;AAMA,QAAM,CAAEC,GAAF,EAAOV,MAAP,IAAkBJ,QAAQ,CAACe,KAAK,CAAC,IAAD,CAAL,CAAYC,IAAZ,CAAiB,CAAjB,CAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,KAAK,EAAEN,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGII,GAAG,CAACG,GAAJ,CAAQ,CAACd,KAAD,EAAQe,OAAR,kBAAoB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAlB;AAA2B,IAAA,KAAK,EAAEA,OAAlC;AAA2C,IAAA,KAAK,EAAEf,KAAlD;AAAyD,IAAA,MAAM,EAAEC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,CAHJ,CADF,CADF;AASD,CAlBD;;AAoBA,eAAeK,MAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst MemoryField = ({ label, value, setMEM }) => {\n  return(\n    <div>\n      <label>{label.toString(16).toUpperCase()}</label><input value={value} onChange={event => setMEM(event.target.value)} type=\"text\"/>\n    </div>\n  )\n}\n\nconst Memory = () => {\n  const memoryStyle = {\n    flex: 1, \n    textAlign: 'right',\n    padding: '0 1em',\n  }\n\n  const [ MEM, setMEM ] = useState(Array(4096).fill(0))\n\n  return(\n    <div style={memoryStyle}>\n      <form>\n        <MemoryField label=\"CI\"/>\n        <MemoryField label=\"AC\"/>\n        { MEM.map((value, address) => <MemoryField key={address} label={address} value={value} setMEM={setMEM}/>) }\n      </form>\n    </div>\n  )\n}\n\nexport default Memory\n"]},"metadata":{},"sourceType":"module"}